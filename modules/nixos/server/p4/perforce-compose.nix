# Auto-generated using compose2nix v0.3.3-pre.
{ pkgs, lib, ... }:

{
  # Runtime
  virtualisation.docker = {
    enable = true;
    autoPrune.enable = true;
  };
  virtualisation.oci-containers.backend = "docker";

  # Containers
  virtualisation.oci-containers.containers."p4d" = {
    image = "sourcegraph/helix-p4d:2023.1";
    environment = {
      "P4PASSWD" = "change-me-49ers";
      "P4PORT" = "1666";
      "P4USER" = "admin";
    };
    volumes = [
      "perforce_helix_data:/p4:rw"
    ];
    ports = [
      "1666:1666/tcp"
    ];
    labels = {
      "compose2nix.systemd.after" = "network-online.target";
      "compose2nix.systemd.wantedBy" = "multi-user.target";
    };
    log-driver = "journald";
    extraOptions = [
      "--health-cmd=nc -z localhost 1666 || /bin/false"
      "--health-interval=10s"
      "--health-retries=10"
      "--health-timeout=3s"
      "--network-alias=p4d"
      "--network=perforce_default"
    ];
  };
  systemd.services."docker-p4d" = {
    serviceConfig = {
      Restart = lib.mkOverride 90 "always";
      RestartMaxDelaySec = lib.mkOverride 90 "1m";
      RestartSec = lib.mkOverride 90 "100ms";
      RestartSteps = lib.mkOverride 90 9;
    };
    after = [
      "docker-network-perforce_default.service"
      "docker-volume-perforce_helix_data.service"
    ];
    requires = [
      "docker-network-perforce_default.service"
      "docker-volume-perforce_helix_data.service"
    ];
    partOf = [
      "docker-compose-perforce-root.target"
    ];
    wantedBy = [
      "docker-compose-perforce-root.target"
    ];
  };

  # Networks
  systemd.services."docker-network-perforce_default" = {
    path = [ pkgs.docker ];
    serviceConfig = {
      Type = "oneshot";
      RemainAfterExit = true;
      ExecStop = "docker network rm -f perforce_default";
    };
    script = ''
      docker network inspect perforce_default || docker network create perforce_default
    '';
    partOf = [ "docker-compose-perforce-root.target" ];
    wantedBy = [ "docker-compose-perforce-root.target" ];
  };

  # Volumes
  systemd.services."docker-volume-perforce_helix_data" = {
    path = [ pkgs.docker ];
    serviceConfig = {
      Type = "oneshot";
      RemainAfterExit = true;
    };
    script = ''
      docker volume inspect perforce_helix_data || docker volume create perforce_helix_data --driver=local
    '';
    partOf = [ "docker-compose-perforce-root.target" ];
    wantedBy = [ "docker-compose-perforce-root.target" ];
  };

  # Root service
  # When started, this will automatically create all resources and start
  # the containers. When stopped, this will teardown all resources.
  systemd.targets."docker-compose-perforce-root" = {
    unitConfig = {
      Description = "Root target generated by compose2nix.";
    };
    wantedBy = [ "multi-user.target" ];
  };
}
